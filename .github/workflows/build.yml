name: build-binaries

on:
  pull_request:
    branches: [ master ]
    paths:
      - '**/*.py'
      - '.github/workflows/**'
      - 'requirements.txt'
  push:
    branches:
      - master
      - ci-build-and-no-audio-asf
    paths:
      - '**/*.py'
      - '.github/workflows/**'
      - 'requirements.txt'
  workflow_dispatch: {}

jobs:
  build:
    name: Build PyInstaller binaries
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, macos-13]
        python-version: ['3.11']
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        shell: bash
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; else pip install PyQt6; fi
          # Ensure common runtime deps are available for PyInstaller analysis
          pip install pyinstaller requests ffmpeg-python

      - name: Build PyQt6 app
        shell: bash
        run: |
          pyinstaller --name WINFF-GUI-PyQt6 --noconfirm --onefile --windowed GUI_pyqt6_WINFF.py

      - name: Build Tkinter app
        shell: bash
        run: |
          pyinstaller --name WINFF-GUI-Tkinter --noconfirm --onefile --windowed GUI_tkinter_WINFF.py

      - name: Collect artifacts
        shell: bash
        run: |
          mkdir -p artifacts
          if [[ "$RUNNER_OS" == "Windows" ]]; then
            cp dist/WINFF-GUI-PyQt6.exe artifacts/
            cp dist/WINFF-GUI-Tkinter.exe artifacts/
          elif [[ "$RUNNER_OS" == "macOS" ]]; then
            # Package .app bundles as zips
            cd dist
            zip -r ../artifacts/WINFF-GUI-PyQt6-macos.app.zip "WINFF-GUI-PyQt6.app"
            zip -r ../artifacts/WINFF-GUI-Tkinter-macos.app.zip "WINFF-GUI-Tkinter.app"
            cd -
          else
            # Fallback for other OSes (not used here)
            cp -r dist/* artifacts/
          fi

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ runner.os }}-binaries
          path: artifacts/*
